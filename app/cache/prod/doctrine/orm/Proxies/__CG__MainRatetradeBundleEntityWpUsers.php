<?php

namespace Proxies\__CG__\Main\RatetradeBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class WpUsers extends \Main\RatetradeBundle\Entity\WpUsers implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Main\\RatetradeBundle\\Entity\\WpUsers' . "\0" . 'userLogin', '' . "\0" . 'Main\\RatetradeBundle\\Entity\\WpUsers' . "\0" . 'userPass', '' . "\0" . 'Main\\RatetradeBundle\\Entity\\WpUsers' . "\0" . 'userNicename', '' . "\0" . 'Main\\RatetradeBundle\\Entity\\WpUsers' . "\0" . 'userEmail', '' . "\0" . 'Main\\RatetradeBundle\\Entity\\WpUsers' . "\0" . 'userUrl', '' . "\0" . 'Main\\RatetradeBundle\\Entity\\WpUsers' . "\0" . 'userRegistered', '' . "\0" . 'Main\\RatetradeBundle\\Entity\\WpUsers' . "\0" . 'userActivationKey', '' . "\0" . 'Main\\RatetradeBundle\\Entity\\WpUsers' . "\0" . 'userStatus', '' . "\0" . 'Main\\RatetradeBundle\\Entity\\WpUsers' . "\0" . 'displayName', '' . "\0" . 'Main\\RatetradeBundle\\Entity\\WpUsers' . "\0" . 'id');
        }

        return array('__isInitialized__', '' . "\0" . 'Main\\RatetradeBundle\\Entity\\WpUsers' . "\0" . 'userLogin', '' . "\0" . 'Main\\RatetradeBundle\\Entity\\WpUsers' . "\0" . 'userPass', '' . "\0" . 'Main\\RatetradeBundle\\Entity\\WpUsers' . "\0" . 'userNicename', '' . "\0" . 'Main\\RatetradeBundle\\Entity\\WpUsers' . "\0" . 'userEmail', '' . "\0" . 'Main\\RatetradeBundle\\Entity\\WpUsers' . "\0" . 'userUrl', '' . "\0" . 'Main\\RatetradeBundle\\Entity\\WpUsers' . "\0" . 'userRegistered', '' . "\0" . 'Main\\RatetradeBundle\\Entity\\WpUsers' . "\0" . 'userActivationKey', '' . "\0" . 'Main\\RatetradeBundle\\Entity\\WpUsers' . "\0" . 'userStatus', '' . "\0" . 'Main\\RatetradeBundle\\Entity\\WpUsers' . "\0" . 'displayName', '' . "\0" . 'Main\\RatetradeBundle\\Entity\\WpUsers' . "\0" . 'id');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (WpUsers $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setUserLogin($userLogin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserLogin', array($userLogin));

        return parent::setUserLogin($userLogin);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserLogin', array());

        return parent::getUserLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserPass($userPass)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserPass', array($userPass));

        return parent::setUserPass($userPass);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserPass()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserPass', array());

        return parent::getUserPass();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserNicename($userNicename)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserNicename', array($userNicename));

        return parent::setUserNicename($userNicename);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserNicename()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserNicename', array());

        return parent::getUserNicename();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserEmail($userEmail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserEmail', array($userEmail));

        return parent::setUserEmail($userEmail);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserEmail', array());

        return parent::getUserEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserUrl($userUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserUrl', array($userUrl));

        return parent::setUserUrl($userUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserUrl', array());

        return parent::getUserUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserRegistered($userRegistered)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserRegistered', array($userRegistered));

        return parent::setUserRegistered($userRegistered);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserRegistered()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserRegistered', array());

        return parent::getUserRegistered();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserActivationKey($userActivationKey)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserActivationKey', array($userActivationKey));

        return parent::setUserActivationKey($userActivationKey);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserActivationKey()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserActivationKey', array());

        return parent::getUserActivationKey();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserStatus($userStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserStatus', array($userStatus));

        return parent::setUserStatus($userStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserStatus', array());

        return parent::getUserStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setDisplayName($displayName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisplayName', array($displayName));

        return parent::setDisplayName($displayName);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplayName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplayName', array());

        return parent::getDisplayName();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

}
